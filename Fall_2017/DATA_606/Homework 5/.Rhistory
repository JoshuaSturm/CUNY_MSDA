library(SnowballC)
library(RCurl)
library(XML)
library(Rcrawler)
# cb_url[i] <- cb_raw$Links[i]
# cb_url[i] <- read_html(cb_url[i])
# cb_url[i] <- html_nodes("h3")
# cb_url$desc[i] <- html_text()
# parse <- read_html(cb_url)
# cb_raw$desc[i] = extract
Rcrawler(Website = cb_raw$Links[i], patterns = "//*[@class = 'Description']", Obeyrobots = T)
cb_raw <- read.csv("careerbuilder.csv", stringsAsFactors = F)
for (i in 1:nrow(cb_raw))
{
# cb_url[i] <- cb_raw$Links[i]
# cb_url[i] <- read_html(cb_url[i])
# cb_url[i] <- html_nodes("h3")
# cb_url$desc[i] <- html_text()
# parse <- read_html(cb_url)
# cb_raw$desc[i] = extract
Rcrawler(Website = cb_raw$Links[i], pattern = "//*[@class = 'Description']", Obeyrobots = T)
html_nodes("h3")
cb_raw$desc[i] <- html_text()
}
cb_raw <- read.csv("careerbuilder.csv", stringsAsFactors = F)
for (i in 1:nrow(cb_raw))
{
# cb_url[i] <- cb_raw$Links[i]
# cb_url[i] <- read_html(cb_url[i])
# cb_url[i] <- html_nodes("h3")
# cb_url$desc[i] <- html_text()
# parse <- read_html(cb_url)
# cb_raw$desc[i] = extract
Rcrawler(Website = cb_raw$Links[i], patterns = c("//*[@class = 'Description']"), Obeyrobots = T)
html_nodes("h3")
cb_raw$desc[i] <- html_text()
}
pageinfo <- LinkExtractor(cb_raw$Links[1])
View(pageinfo)
View(pageinfo)
pageinfo <- LinkExtractor(cb_raw$Links[1])
pageinfo <- LinkExtractor(cb_raw$Links[1])
Data <- ContentScraper(pageinfo[[1]][[10]], "//*[contains(concat( " ", @class, " " ), concat( " ", "description", " " ))]")
Data <- ContentScraper(pageinfo[[1]][[10]])
pageinfo <- LinkExtractor(cb_raw$Links[1])
Data <- ContentScraper(pageinfo[[1]][[10]], "//*/descripton", "description")
View(Data)
View(Data)
View(pageinfo)
View(pageinfo)
Data <- ContentScraper(pageinfo[[1]][[10]], "//*/descripton", "description")
ajs <- "http://www.journals.uchicago.edu/doi/full/10.1086/683357"
pageInfo <- LinkExtractor(url = ajs)
Data <- ContentScraper(pageInfo[[1]][[10]], "//*/title", "title")
View(Data)
View(Data)
# cb_url[i] <- html_nodes("h3")
Data
ajs <- cb_raw$Links[1]
pageInfo <- LinkExtractor(url = ajs)
Data <- ContentScraper(pageInfo[[1]][[10]], "//*/title", "title")
Data
ajs
View(pageInfo)
View(pageInfo)
ajs <- cb_raw$Links[1]
pageInfo <- LinkExtractor(url = ajs)
Data <- ContentScraper(pageInfo[[1]][[10]], "//*/description", "description")
Data
Data <- ContentScraper(pageInfo[[1]][[10]], "//*/description", "description", astext=T)
Data
# ajs <- cb_raw$Links[1]
ajes <- "http://www.journals.uchicago.edu/doi/full/10.1086/683357"
# ajs <- cb_raw$Links[1]
ajs <- "http://www.journals.uchicago.edu/doi/full/10.1086/683357"
pageInfo <- LinkExtractor(url = ajs)
Data <- ContentScraper(pageInfo[[1]][[10]], "//*/title", "title")
Data
View(Data)
View(Data)
datapattern <- //*[contains(concat( " ", @class, " " ), concat( " ", "description", " " ))]
datapattern <- "//*[contains(concat( " ", @class, " " ), concat( " ", "description", " " ))]"
# ajs <- cb_raw$Links[1]
ajs <- c("http://www.journals.uchicago.edu/doi/full/10.1086/683357")
datapattern <- "//*[contains(concat( " ", @class, " " ), concat( " ", "description", " " ))]"
datapattern <- c("//*[contains(concat( " ", @class, " " ), concat( " ", "description", " " ))]")
datapattern <- "//a[@class='description']"
pageinfo <- LinkExtractor(cb_raw$Links[1])
Rcrawler(Website = cb_raw$Links[1], no_cores = 4, no_conn = 4, ExtractPatterns = datapattern )
View(INDEX)
View(INDEX)
dfr
setwd("~/GitHub/CUNY_MSDA/Fall_2017/DATA_606/Homework 5")
n <- 25
samp_mean <- (77-65)/2
n <- 25
samp_mean <- (77-65)/2
n <- 25
samp_mean <- (77-65)/2
n <- 25
samp_mean <- (77+65)/2
moe <- (x2-x1)/2
n <- 25
x1 <- 65
x2 <- 77
samp_mean <- (x1+x2)/2
moe <- (x2-x1)/2
n <- 25
x1 <- 65
x2 <- 77
samp_mean <- (x1+x2)/2
moe <- (x2-x1)/2
df <- n-1
se <-
qnorm(0.8)
qnorm(0.9)
1-qnorm(0.9)
pnorm(0.9)
df <- n-1
t24 <- qt(0.1, 24)
df <- n-1
t24 <- qt(0.1, df)
df <- n-1
t24 <- qt(0.1, df)
df <- n-1
t24 <- qt(0.1, df)
df <- n-1
t24 <- qt(0.9, df)
df <- n-1
c <- 0.9
c2 <- c + (1-c)/2
t24 <- qt(c2, df)
s <- (moe*sqrt(25))/(t24)
qnorm(0.9)
1-qnorm(0.9)
qnorm(0.1)
pnorm(0.9)
qnorm(1.645)
qnorm(0.9)
pnorm(0.9)
qnorm(pnorm(0.9))
# for 90% confidence interval, Z* = 1.645
z <- 1.645
# 25 = 1.645*(250/sqrt(n))
n <- (z*\sigma/ME)
# for 90% confidence interval, Z* = 1.645
z <- 1.645
me <- 25
sigma <- 250
# 25 = 1.645*(250/sqrt(n))
n <- (z*sigma/me)
# for 90% confidence interval, Z* = 1.645
z <- 1.645
me <- 25
sigma <- 250
# 25 = 1.645*(250/sqrt(n))
n <- (z*sigma/me)^2
sd <- 8.886
avg_diff <- 0.545
se <- sd / sqrt(200)
n <- 200
df <- n-1
sd <- 8.886
avg_diff <- 0.545
se <- sd / sqrt(n)
tdf <- (avg_diff - 0)/(se)
n <- 200
df <- n-1
sd <- 8.886
avg_diff <- -0.545
se <- sd / sqrt(n)
tdf <- (avg_diff - 0)/(se)
n <- 200
df <- n-1
sd <- 8.886
avg_diff <- -0.545
se <- sd / sqrt(n)
tdf <- (avg_diff - 0)/(se)
2 * pt(tdf, df)
n <- 200
df <- n-1
sd <- 8.886
avg_diff <- -0.545
se <- sd / sqrt(n)
tdf <- (avg_diff - 0)/(se)
p <- 2 * pt(tdf, df)
n <- 26
df <- n-1
meanA <- 16.12
sdA <- 3.58
meanM <- 19.85
sdM <- 4.51
xdiff <- meanA - meanM
se <- sqrt(((sdA^2)/n)+((sdM)^2)/n)
n <- 26
df <- n-1
meanA <- 16.12
sdA <- 3.58
meanM <- 19.85
sdM <- 4.51
xdiff <- meanA - meanM
se <- sqrt(((sdA^2)/n)+((sdM)^2)/n)
tdf <- \frac{xdiff - 0}{se}
n <- 26
df <- n-1
meanA <- 16.12
sdA <- 3.58
meanM <- 19.85
sdM <- 4.51
xdiff <- meanA - meanM
se <- sqrt(((sdA^2)/n)+((sdM)^2)/n)
tdf <- (xdiff - 0)/(se)
n <- 26
df <- n-1
meanA <- 16.12
sdA <- 3.58
meanM <- 19.85
sdM <- 4.51
xdiff <- meanA - meanM
se <- sqrt(((sdA^2)/n)+((sdM)^2)/n)
tdf <- (xdiff - 0)/(se)
p <- 2 * pt(tdf, df)
n <- 200
df <- n-1
sd <- 8.886
avg_diff <- -0.545
se <- sd / sqrt(n)
tdf <- (avg_diff - 0)/(se)
p <- 2 * pt(tdf, df)
n <- 5
df <- n - 1
mu <- c(38.67, 39.6, 41.39, 42.55, 40.85)
sd <- c(15.81, 14.97, 18.1, 13.62, 15.51)
n <- c(121, 546, 97, 253, 155)
data.frame(mu,sd,n)
k <- 5
df <- k - 1
mu <- c(38.67, 39.6, 41.39, 42.55, 40.85)
sd <- c(15.81, 14.97, 18.1, 13.62, 15.51)
n <- c(121, 546, 97, 253, 155)
tot <- sum(n)
k <- 5
df <- k - 1
mu <- c(38.67, 39.6, 41.39, 42.55, 40.85)
sd <- c(15.81, 14.97, 18.1, 13.62, 15.51)
n <- c(121, 546, 97, 253, 155)
tot_n <- sum(n)
tot_df <- df + (tot_n - k)
k <- 5
df <- k - 1
mu <- c(38.67, 39.6, 41.39, 42.55, 40.85)
sd <- c(15.81, 14.97, 18.1, 13.62, 15.51)
n <- c(121, 546, 97, 253, 155)
tot_n <- sum(n)
tot_df <- df + (tot_n - k)
k <- 5   # Categories
df <- k - 1   # degrees of freedom
mu <- c(38.67, 39.6, 41.39, 42.55, 40.85)    # array of averages
sd <- c(15.81, 14.97, 18.1, 13.62, 15.51)    # array of standard deviations
n <- c(121, 546, 97, 253, 155)               # array of totals for each category
tot_n <- sum(n)
df_E <- tot_n - k
tot_df <- df + (tot_n - k)
# MSG = SSG / df_G
MSG <- 501.54 # (given)
# SSG = MSG * df_G
SSG <- df * MSG
# SSE = SST - SSG
SSE <- 267382
SST <- SSE + SSG
# MSE = SSE / df_E
MSE <- SSE / df_E
# F = MSG / MSE
F_stat <- MSG / MSE
Pr <- 0.0682
col_names <- c("df", "Sum Sq", "Mean Sq", "F Value", "Pr(>F")
row_names <- c("degree", "Residuals", "Total")
col_df <- c(df, df_E, tot_df)
col_sq <- c(SSG, SSE, SST)
col_msq <- c(MSG, MSE)
dataf <- dataframe(col_df, col_sq, col_msq, F_stat, Pr)
dataf <- as.data.frame(col_df, col_sq, col_msq, F_stat, Pr)
k <- 5   # Categories
df <- k - 1   # degrees of freedom
mu <- c(38.67, 39.6, 41.39, 42.55, 40.85)    # array of averages
sd <- c(15.81, 14.97, 18.1, 13.62, 15.51)    # array of standard deviations
n <- c(121, 546, 97, 253, 155)               # array of totals for each category
tot_n <- sum(n)
df_E <- tot_n - k
tot_df <- df + (tot_n - k)
# MSG = SSG / df_G
MSG <- 501.54 # (given)
# SSG = MSG * df_G
SSG <- df * MSG
# SSE = SST - SSG
SSE <- 267382
SST <- SSE + SSG
# MSE = SSE / df_E
MSE <- SSE / df_E
# F = MSG / MSE
F_stat <- MSG / MSE
Pr <- 0.0682
col_names <- c("df", "Sum Sq", "Mean Sq", "F Value", "Pr(>F")
row_names <- c("degree", "Residuals", "Total")
col_df <- c(df, df_E, tot_df)
col_sq <- c(SSG, SSE, SST)
col_msq <- c(MSG, MSE)
dataf <- as.data.frame(col_df, col_sq, col_msq, F_stat, Pr)
k <- 5   # Categories
df <- k - 1   # degrees of freedom
mu <- c(38.67, 39.6, 41.39, 42.55, 40.85)    # array of averages
sd <- c(15.81, 14.97, 18.1, 13.62, 15.51)    # array of standard deviations
n <- c(121, 546, 97, 253, 155)               # array of totals for each category
tot_n <- sum(n)
df_E <- tot_n - k
tot_df <- df + (tot_n - k)
# MSG = SSG / df_G
MSG <- 501.54 # (given)
# SSG = MSG * df_G
SSG <- df * MSG
# SSE = SST - SSG
SSE <- 267382
SST <- SSE + SSG
# MSE = SSE / df_E
MSE <- SSE / df_E
# F = MSG / MSE
F_stat <- MSG / MSE
Pr <- 0.0682
col_names <- c("df", "Sum Sq", "Mean Sq", "F Value", "Pr(>F")
row_names <- c("degree", "Residuals", "Total")
col_df <- c(df, df_E, tot_df)
col_sq <- c(SSG, SSE, SST)
col_msq <- c(MSG, MSE)
dataf <- data.frame(col_df, col_sq, col_msq, F_stat, Pr)
k <- 5   # Categories
df <- k - 1   # degrees of freedom
mu <- c(38.67, 39.6, 41.39, 42.55, 40.85)    # array of averages
sd <- c(15.81, 14.97, 18.1, 13.62, 15.51)    # array of standard deviations
n <- c(121, 546, 97, 253, 155)               # array of totals for each category
tot_n <- sum(n)
df_E <- tot_n - k
tot_df <- df + (tot_n - k)
# MSG = SSG / df_G
MSG <- 501.54 # (given)
# SSG = MSG * df_G
SSG <- df * MSG
# SSE = SST - SSG
SSE <- 267382
SST <- SSE + SSG
# MSE = SSE / df_E
MSE <- SSE / df_E
# F = MSG / MSE
F_stat <- MSG / MSE
Pr <- 0.0682
col_names <- c("df", "Sum Sq", "Mean Sq", "F Value", "Pr(>F")
row_names <- c("degree", "Residuals", "Total")
col_df <- c(df, df_E, tot_df)
col_sq <- c(SSG, SSE, SST)
col_msq <- c(MSG, MSE, NA)
col_F <- c(F_stat, NA, NA)
col_Pr <- c(Pr, NA, NA)
dataf <- data.frame(col_df, col_sq, col_msq, col_F, col_Pr)
k <- 5   # Categories
df <- k - 1   # degrees of freedom
mu <- c(38.67, 39.6, 41.39, 42.55, 40.85)    # array of averages
sd <- c(15.81, 14.97, 18.1, 13.62, 15.51)    # array of standard deviations
n <- c(121, 546, 97, 253, 155)               # array of totals for each category
tot_n <- sum(n)
df_E <- tot_n - k
tot_df <- df + (tot_n - k)
# MSG = SSG / df_G
MSG <- 501.54 # (given)
# SSG = MSG * df_G
SSG <- df * MSG
# SSE = SST - SSG
SSE <- 267382
SST <- SSE + SSG
# MSE = SSE / df_E
MSE <- SSE / df_E
# F = MSG / MSE
F_stat <- MSG / MSE
Pr <- 0.0682
col_names <- c("df", "Sum Sq", "Mean Sq", "F Value", "Pr(>F")
row_names <- c("degree", "Residuals", "Total")
col_df <- c(df, df_E, tot_df)
col_sq <- c(SSG, SSE, SST)
col_msq <- c(MSG, MSE, NA)
col_F <- c(F_stat, NA, NA)
col_Pr <- c(Pr, NA, NA)
dataf <- data.frame(col_df, col_sq, col_msq, col_F, col_Pr)
dataf
k <- 5   # Categories
df <- k - 1   # degrees of freedom
mu <- c(38.67, 39.6, 41.39, 42.55, 40.85)    # array of averages
sd <- c(15.81, 14.97, 18.1, 13.62, 15.51)    # array of standard deviations
n <- c(121, 546, 97, 253, 155)               # array of totals for each category
tot_n <- sum(n)
df_E <- tot_n - k
tot_df <- df + (tot_n - k)
# MSG = SSG / df_G
MSG <- 501.54 # (given)
# SSG = MSG * df_G
SSG <- df * MSG
# SSE = SST - SSG
SSE <- 267382
SST <- SSE + SSG
# MSE = SSE / df_E
MSE <- SSE / df_E
# F = MSG / MSE
F_stat <- MSG / MSE
Pr <- 0.0682
names <- c("df", "Sum Sq", "Mean Sq", "F Value", "Pr(>F")
row_names <- c("degree", "Residuals", "Total")
col_df <- c(df, df_E, tot_df)
col_sq <- c(SSG, SSE, SST)
col_msq <- c(MSG, MSE, NA)
col_F <- c(F_stat, NA, NA)
col_Pr <- c(Pr, NA, NA)
dataf <- data.frame(col_df, col_sq, col_msq, col_F, col_Pr)
names(df) <- c("df", "Sum Sq", "Mean Sq", "F Value", "Pr(>F")
k <- 5   # Categories
df <- k - 1   # degrees of freedom
mu <- c(38.67, 39.6, 41.39, 42.55, 40.85)    # array of averages
sd <- c(15.81, 14.97, 18.1, 13.62, 15.51)    # array of standard deviations
n <- c(121, 546, 97, 253, 155)               # array of totals for each category
tot_n <- sum(n)
df_E <- tot_n - k
tot_df <- df + (tot_n - k)
# MSG = SSG / df_G
MSG <- 501.54 # (given)
# SSG = MSG * df_G
SSG <- df * MSG
# SSE = SST - SSG
SSE <- 267382
SST <- SSE + SSG
# MSE = SSE / df_E
MSE <- SSE / df_E
# F = MSG / MSE
F_stat <- MSG / MSE
Pr <- 0.0682
names <- c("df", "Sum Sq", "Mean Sq", "F Value", "Pr(>F")
row_names <- c("degree", "Residuals", "Total")
col_df <- c(df, df_E, tot_df)
col_sq <- c(SSG, SSE, SST)
col_msq <- c(MSG, MSE, NA)
col_F <- c(F_stat, NA, NA)
col_Pr <- c(Pr, NA, NA)
dataf <- data.frame(col_df, col_sq, col_msq, col_F, col_Pr)
col_names(df) <- c("df", "Sum Sq", "Mean Sq", "F Value", "Pr(>F")
k <- 5   # Categories
df <- k - 1   # degrees of freedom
mu <- c(38.67, 39.6, 41.39, 42.55, 40.85)    # array of averages
sd <- c(15.81, 14.97, 18.1, 13.62, 15.51)    # array of standard deviations
n <- c(121, 546, 97, 253, 155)               # array of totals for each category
tot_n <- sum(n)
df_E <- tot_n - k
tot_df <- df + (tot_n - k)
# MSG = SSG / df_G
MSG <- 501.54 # (given)
# SSG = MSG * df_G
SSG <- df * MSG
# SSE = SST - SSG
SSE <- 267382
SST <- SSE + SSG
# MSE = SSE / df_E
MSE <- SSE / df_E
# F = MSG / MSE
F_stat <- MSG / MSE
Pr <- 0.0682
names <- c("df", "Sum Sq", "Mean Sq", "F Value", "Pr(>F")
row_names <- c("degree", "Residuals", "Total")
col_df <- c(df, df_E, tot_df)
col_sq <- c(SSG, SSE, SST)
col_msq <- c(MSG, MSE, NA)
col_F <- c(F_stat, NA, NA)
col_Pr <- c(Pr, NA, NA)
dataf <- data.frame(col_df, col_sq, col_msq, col_F, col_Pr)
colnames(df) <- c("df", "Sum Sq", "Mean Sq", "F Value", "Pr(>F")
col_names(dataf) <- c("df", "Sum Sq", "Mean Sq", "F Value", "Pr(>F")
colnames(dataf) <- c("df", "Sum Sq", "Mean Sq", "F Value", "Pr(>F")
names(dataf) <- c("df", "Sum Sq", "Mean Sq", "F Value", "Pr(>F")
k <- 5   # Categories
df <- k - 1   # degrees of freedom
mu <- c(38.67, 39.6, 41.39, 42.55, 40.85)    # array of averages
sd <- c(15.81, 14.97, 18.1, 13.62, 15.51)    # array of standard deviations
n <- c(121, 546, 97, 253, 155)               # array of totals for each category
tot_n <- sum(n)
df_E <- tot_n - k
tot_df <- df + (tot_n - k)
# MSG = SSG / df_G
MSG <- 501.54 # (given)
# SSG = MSG * df_G
SSG <- df * MSG
# SSE = SST - SSG
SSE <- 267382
SST <- SSE + SSG
# MSE = SSE / df_E
MSE <- SSE / df_E
# F = MSG / MSE
F_stat <- MSG / MSE
Pr <- 0.0682
names <- c("df", "Sum Sq", "Mean Sq", "F Value", "Pr(>F")
row_names <-
col_df <- c(df, df_E, tot_df)
col_sq <- c(SSG, SSE, SST)
col_msq <- c(MSG, MSE, NA)
col_F <- c(F_stat, NA, NA)
col_Pr <- c(Pr, NA, NA)
dataf <- data.frame(col_df, col_sq, col_msq, col_F, col_Pr)
names(dataf) <- c("df", "Sum Sq", "Mean Sq", "F Value", "Pr(>F")
rownames <- c("degree", "Residuals", "Total")
dataf
